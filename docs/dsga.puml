@startuml
	'skin rose
	title Relationships - Class Diagram
	annotation "CRTP duck type"
	{
		+ {abstract} set()
		+ {abstract} operator[]()
		+ {abstract} data()
		+ {abstract} sequence()
		+ {abstract} iterator functions()
	}
	note left of "CRTP duck type"
		Conceptual interface, not real :
		Could be made into a c++ concept
	end note
	abstract vector_base <Writable, T, Count, Derived>
	{
		+ CRTP set()
		+ CRTP operator[]()
		+ CRTP data()
		+ CRTP sequence()
		+ CRTP iterator functions()
		+ length()
		+ size()
		+ as_derived()
		+ apply()
		+ query()
		+ shift()
		+ cshift()
		+ min()
		+ max()
		+ sum()
	}
	struct basic_vector<T, Size>
	{
		+ union
		+ {static} offsets : std::array<std::size_t, Size>
		+ set()
		+ operator[]()
		+ operator=()
		+ data()
		+ sequence()
		+ iterator functions()
		+ swap()
	}
	annotation basic_vector::anonymous_union
	{
		+ base
		+ swizzles
	}
	struct storage_wrapper<T, Size>
	{
		+ store : std::array<T, Size>
		+ {static} offsets : std::array<std::size_t, Size>
		+ set()
		+ operator[]()
		+ operator=()
		+ data()
		+ sequence()
		+ iterator functions()
		+ length()
		+ size()
		+ swap()
	}
	struct indexed_vector<T, Size, Count, ...Is>
	{
		+ base : std::array<T, Size>
		+ {static} offsets : std::array<std::size_t, Count>
		+ set()
		+ operator[]()
		+ operator=()
		+ data()
		+ sequence()
		+ iterator functions()
	}
	struct basic_matrix<T, Cols, Rows>
	{
		+ columns : std::array<basic_vector<T, Rows>, Cols>
		+ row()
		+ operator[]()
		+ operator=()
		+ data()
		+ iterator functions()
		+ length()
		+ column_length()
		+ size()
		+ column_size()
		+ swap()
	}
	vector_base <|-- basic_vector: CRTP inherits
	vector_base <|-- indexed_vector : CRTP inherits
	"CRTP duck type" ^.. basic_vector : duck implements
	"CRTP duck type" ^.. indexed_vector : duck implements
	basic_vector::anonymous_union::base "1" *-- "1" storage_wrapper : base
	basic_vector::anonymous_union::swizzles "1" *-- "many" indexed_vector : swizzles
	basic_vector::union "1" *-- "1" basic_vector::anonymous_union
	note right on link
	  Nested anonymous union where
	  all members have a common initial
	  sequence with each other
	end note
	"CRTP duck type" <. vector_base : Derived CRTP
	basic_matrix::columns "1" *-- "Cols" basic_vector : columns
	basic_vector -[hidden]left- indexed_vector
	storage_wrapper .[hidden]right. basic_matrix
@enduml
